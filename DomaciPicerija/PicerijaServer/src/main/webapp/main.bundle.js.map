{"version":3,"sources":["G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/$_lazy_route_resource lazy","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/app.component.css","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/app.component.html","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/app.component.ts","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/app.module.ts","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/login/login.component.css","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/login/login.component.html","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/login/login.component.ts","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/model/model.ts","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/details/comment.service.ts","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/details/details.component.css","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/details/details.component.html","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/details/details.component.ts","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/main/main.component.css","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/main/main.component.html","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/main/main.component.ts","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/page-not-found/page-not-found.component.css","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/page-not-found/page-not-found.component.html","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/page-not-found/page-not-found.component.ts","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/service/authentication-service.service.ts","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/service/can-activate-auth.guard.ts","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/service/category.service.ts","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/service/jwt-utils.service.ts","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/service/menu.service.ts","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/service/token-interceptor.service.ts","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/environments/environment.ts","G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!-- Fixed navbar -->\\r\\n<nav class=\\\"navbar navbar-inverse\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"navbar-header\\\">\\r\\n      <a class=\\\"navbar-brand\\\" href=\\\"main\\\">Trattoria</a>\\r\\n    </div>\\r\\n    <div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse\\\">\\r\\n      <ul class=\\\"nav navbar-nav\\\">\\r\\n        <li class=\\\"active\\\"><a href=\\\"main\\\">Home</a></li>\\r\\n        <li><a href=\\\"about\\\">About</a></li>\\r\\n        <li><a href=\\\"contact\\\">Contact</a></li>\\r\\n      </ul>\\r\\n      <ul class=\\\"nav navbar-nav pull-right\\\">\\r\\n        <li *ngIf=\\\"!isLoggedIn()\\\"><a href=\\\"login\\\">Log in</a></li>\\r\\n\\t\\t\\t\\t<li *ngIf=\\\"isLoggedIn()\\\"><a (click)=\\\"logout()\\\">Logout</a></li>\\r\\n\\t\\t\\t</ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n<div class=\\\"container-fluid theme-showcase\\\" role=\\\"main\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n        <h1>Trattoria La Campagna</h1>\\r\\n        <p>...perfect place to grab a quick bite and wash it down with some local wine...</p>\\r\\n      </div>\\r\\n    <router-outlet></router-outlet>\\r\\n</div>  \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from './service/authentication-service.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  constructor(private authenticationService: AuthenticationService,\r\n    private router: Router) {\r\n  }\r\n\r\n  logout(): void {\r\n    this.authenticationService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.authenticationService.isLoggedIn();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule} from '@angular/forms';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { PageNotFoundComponent } from './page/page-not-found/page-not-found.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nimport { AuthenticationService } from './service/authentication-service.service';\r\nimport { JwtUtilsService } from './service/jwt-utils.service';\r\nimport { TokenInterceptorService } from './service/token-interceptor.service';\r\nimport { CanActivateAuthGuard } from './service/can-activate-auth.guard';\r\nimport { MainComponent } from './page/main/main.component';\r\nimport { CategoryService } from './service/category.service';\r\nimport { DetailsComponent } from './page/details/details.component';\r\nimport { MenuService } from './service/menu.service';\r\nimport { CommentService } from './page/details/comment.service';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'main', component: MainComponent},\r\n  { path: 'news/:id', component: DetailsComponent},\r\n  // { path: 'main', component: MainComponent, canActivate:[CanActivateAuthGuard]},\r\n  { path: '', redirectTo: 'main', pathMatch: 'full' },\r\n  {path: '**', component: PageNotFoundComponent}\r\n]\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PageNotFoundComponent,\r\n    LoginComponent,\r\n    MainComponent,\r\n    DetailsComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(\r\n      appRoutes,\r\n      {\r\n        enableTracing: false\r\n      }\r\n    )\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    },\r\n    AuthenticationService,\r\n    CanActivateAuthGuard,\r\n    JwtUtilsService,\r\n    MenuService,\r\n    CategoryService,\r\n    CommentService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-3\\\"></div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <form class=\\\"form-signin\\\" (ngSubmit)=\\\"login()\\\">\\r\\n        <h2 class=\\\"form-signin-heading\\\">Please sign in</h2>\\r\\n        <label for=\\\"username\\\" class=\\\"sr-only\\\">Username</label>\\r\\n        <input type=\\\"text\\\" id=\\\"username\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" placeholder=\\\"Username\\\"\\r\\n          required autofocus>\\r\\n        <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\r\\n        <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.password\\\" placeholder=\\\"Password\\\"\\r\\n          required>\\r\\n        <button class=\\\"btn btn-primary btn-block\\\" type=\\\"submit\\\">Sign in</button>\\r\\n      </form>\\r\\n      <div *ngIf=wrongUsernameOrPass class=\\\"alert alert-warning box-msg\\\" role=\\\"alert\\\">\\r\\n        Wrong username or password.\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\"></div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { AuthenticationService } from '../service/authentication-service.service';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public user;\r\n\r\n  public wrongUsernameOrPass:boolean;\r\n\r\n  constructor(private authenticationService:AuthenticationService,\r\n              private router: Router) {\r\n    this.user = {};\r\n    this.wrongUsernameOrPass = false;\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login():void{\r\n    this.authenticationService.login(this.user.username, this.user.password).subscribe(\r\n      (loggedIn:boolean) => {\r\n        if(loggedIn){\r\n          this.router.navigate(['/main']);          \r\n        }\r\n      }\r\n    ,\r\n    (err:Error) => {\r\n      if(err.toString()==='Ilegal login'){\r\n        this.wrongUsernameOrPass = true;\r\n        console.log(err);\r\n      }\r\n      else{\r\n        Observable.throw(err);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/login/login.component.ts","export interface Page<T> {\r\n\tcontent: T[];\r\n\ttotalPages: number;\r\n\ttotalElements: number;\r\n\tlast: boolean;\r\n\tsize: number;\r\n\tnumber:number;\r\n\tsort: any;\r\n\tfirst: boolean;\r\n\tnumberOfElements: number;\r\n\r\n}\r\n\r\nexport interface Category {\r\n    id?:number;\r\n    name:string;\r\n}\r\nexport interface Comment {\r\n\tid?:number;\r\n\tauthorName:string;\r\n\tcontent:string;\r\n\tmenu:MenuInterface;\r\n\tsubComments?:Comment[];\r\n}\r\n\r\nexport interface MenuInterface {\r\n    id?:number;\r\n    name: string;\r\n    price: number;\r\n    category: Category;\r\n}\r\n\r\nexport class Menu implements MenuInterface{\r\n\tpublic id: number;\r\n\tpublic name: string;\r\n\tpublic category: Category;\r\n\tpublic price: number;\r\n\t\t\r\n\tconstructor(menu:MenuInterface)\r\n\t{\r\n\t\tthis.id = menu.id;\r\n\t\tthis.name = menu.name;\r\n\t\tthis.category = menu.category;\r\n\t\tthis.price = menu.price;\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/model/model.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs/Rx';\n\n@Injectable()\nexport class CommentService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  getComments(menuId:number): Observable<Comment[]>{\n    let params = new HttpParams();\n    params = params.append('menuId', menuId.toString());\n\n    return this.httpClient.get<Comment[]>(`api/comments`, {params});\n  }\n\n  saveCommentOnNews( comment:any){\n    return this.httpClient.post(`api/comments`,comment);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/details/comment.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/details/details.component.css\n// module id = ../../../../../src/app/page/details/details.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"menu\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <h1>{{menu.name}}</h1>\\r\\n            <br/>\\r\\n            <p>{{menu.price}}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n                <form (ngSubmit)=\\\"comment()\\\" class=\\\"form\\\">\\r\\n                        Korisnik:\\r\\n                        <input [(ngModel)]=\\\"newComment.authorName\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"username\\\" /> \\r\\n                        Komentar:\\r\\n                        <input [(ngModel)]=\\\"newComment.content\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"firstName\\\" />\\r\\n                        <br/>\\r\\n                        <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Ostavi komentar\\\" />\\r\\n            \\r\\n                    </form>\\r\\n            \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <h4>Komentari</h4>\\r\\n                <table *ngIf=\\\"comment\\\" class=\\\"table table-striped\\\" >\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Korisnik</th>\\r\\n                            <th>Komentar</th>\\r\\n                            <th>Komentariši</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let item of comment let one = index\\\">\\r\\n                            <td>{{item.authorName}}</td>\\r\\n                            <td>{{item.content}}, {{}}</td>\\r\\n\\r\\n                        <!--    <td><b *ngIf=\\\"item.reference_comment\\\">&ensp;</b>{{item.details}}</td> -->\\r\\n                            <td><button  (click)=\\\"addComment(item.id)\\\" class=\\\"btn btn-default\\\">Komentariši</button></td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        \\r\\n    \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/details/details.component.html\n// module id = ../../../../../src/app/page/details/details.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MenuService } from '../../service/menu.service';\r\nimport { MenuInterface } from '../../model/model';\r\nimport { CommentService } from './comment.service';\r\n\r\n@Component({\r\n  selector: 'app-details',\r\n  templateUrl: './details.component.html',\r\n  styleUrls: ['./details.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DetailsComponent implements OnInit {\r\n\r\n  private menu:MenuInterface;\r\n  private comment:any;\r\n  private newComment:any;\r\n\r\n\r\n  constructor(private menuService:MenuService,private commentService:CommentService,\r\n              private route:ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n    //this.route.params.subscribe((params)=>{\r\n      //var id = +params['id'];\r\n      //this.menuService.getMenu(id).subscribe((resp)=>{\r\n        //this.menu = resp;\r\n      //})\r\n    //})\r\n  }\r\n\r\n  loadData() {\r\n    this.menuService.getMenu(this.route.snapshot.params.id).subscribe(\r\n      (data)=>{\r\n        this.menu=data;\r\n      }\r\n    );\r\n    this.commentService.getComments(this.route.snapshot.params.id).subscribe(\r\n      (data)=>{\r\n        this.comment=data;\r\n      }\r\n    );\r\n  }\r\n\r\n  \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/details/details.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/main/main.component.css\n// module id = ../../../../../src/app/page/main/main.component.css\n// module chunks = main","module.exports = \"<form (submit)=\\\"filter()\\\" class=\\\"form form-inline\\\">\\r\\n  Name:\\r\\n  <input name=\\\"name\\\" [(ngModel)]=\\\"searchName\\\" type=\\\"text\\\" class=\\\"form-control\\\"/>\\r\\n  <input type=\\\"submit\\\" value=\\\"filter\\\" class=\\\"form-control\\\"/>\\r\\n</form>\\r\\n{{currentPage}}\\r\\n<div class=\\\"row\\\">\\r\\n  \\r\\n<div *ngIf=\\\"page\\\" class=\\\"{{getTableClass()}}\\\">\\r\\n  <button  (click)=\\\"changePage(-1)\\\" class=\\\"btn pull-right\\\">b</button>\\r\\n  <button  (click)=\\\"changePage(1)\\\" class=\\\"btn pull-right\\\">f</button>\\r\\n  <table class=\\\"table table-striped\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Name</th>\\r\\n      <th>Category</th>\\r\\n      <th>Price</th>\\r\\n      <th *ngIf=\\\"isLoggedIn()\\\">Action</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let item of page.content\\\">\\r\\n      <td>{{item.name}}</td>\\r\\n      <td>{{item.category.name}}</td>\\r\\n      <td>{{item.price}} <a class=\\\"btn btn-primary\\\" href=\\\"news/{{item.id}}\\\">detalji</a>\\r\\n      </td>\\r\\n      <td *ngIf=\\\"isLoggedIn()\\\">\\r\\n          <button *ngIf=\\\"isLoggedIn()\\\" (click)=\\\"delete(item)\\\" class=\\\"btn btn-danger\\\">delete</button>\\r\\n          <button *ngIf=\\\"isLoggedIn()\\\" (click)=\\\"edit(item)\\\" class=\\\"btn btn-default\\\">edit</button>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-md-4\\\" *ngIf=\\\"isLoggedIn()\\\">\\r\\n<form  (ngSubmit)=\\\"save()\\\" class=\\\"form\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"name\\\"> Name:</label>\\r\\n    <input [(ngModel)]=\\\"menuToAdd.name\\\" id =\\\"name\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\"/>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    \\r\\n    <label for=\\\"category\\\">Category:</label>\\r\\n    <select [compareWith]=\\\"byId\\\" id=\\\"category\\\" [(ngModel)]=\\\"menuToAdd.category\\\" name=\\\"category\\\" class=\\\"form-control\\\">\\r\\n      <option *ngFor=\\\"let category of categories;\\\" [ngValue]=\\\"category\\\">{{category.name}}</option>\\r\\n    </select>  \\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    Price:<input [(ngModel)]=\\\"menuToAdd.price\\\" class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"price\\\"/>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"save\\\"/>\\r\\n    <button (click)=\\\"reset()\\\">reset</button>\\r\\n  </div>\\r\\n</form>\\r\\n</div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/main/main.component.html\n// module id = ../../../../../src/app/page/main/main.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { CategoryService } from '../../service/category.service';\r\nimport { AuthenticationService } from '../../service/authentication-service.service';\r\nimport { Page, MenuInterface, Category, Menu } from '../../model/model';\r\nimport { MenuService } from '../../service/menu.service';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  currentPage:number=0;\r\n  page: Page<MenuInterface>;\r\n  public categories: Category[];\r\n  public menuToAdd: MenuInterface;\r\n  public menuToEdit: MenuInterface;\r\n  public searchName: string;\r\n  totalPages:number;\r\n  \r\n  constructor(private menuService:MenuService,\r\n              private categoryService:CategoryService,\r\n              private authenticationService:AuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n    this.reset();\r\n  }\r\n\r\n  isLoggedIn(){\r\n    return this.authenticationService.isLoggedIn();\r\n  }\r\n\r\n  loadData(){\r\n    this.menuService.getMenues(this.currentPage).subscribe(\r\n      data=>{\r\n        this.page=data;\r\n        this.totalPages=data['totalPages'];\r\n      }\r\n    );\r\n\r\n    this.categoryService.get().subscribe(\r\n      data=>{\r\n        this.categories=data;\r\n      }\r\n    )\r\n  }\r\n\r\n  filter(){\r\n    this.menuService.filter(this.searchName).subscribe(\r\n      data=>{\r\n        this.page.content=data;\r\n      }\r\n    )\r\n  }\r\n\r\n  save(menuToAdd:MenuInterface){\r\n    if(this.menuToAdd.id) {\r\n      this.menuService.editMenu(this.menuToAdd).subscribe(\r\n        (data)=>{\r\n          this.loadData();\r\n          this.reset();\r\n        }\r\n      )\r\n\r\n    }\r\n    else{ \r\n      this.menuService.addMenu(this.menuToAdd).subscribe(\r\n      (data)=>{\r\n        this.loadData();\r\n        this.reset();\r\n      }\r\n    );\r\n  }\r\n  }\r\n  reset(){\r\n    this.menuToAdd =new Menu({\r\n      name:'',\r\n      price:0,\r\n      category:{\r\n        name:''\r\n      }\r\n    })\r\n    \r\n  }\r\n  edit(menu:MenuInterface){\r\n    this.menuToAdd=menu;\r\n  }\r\n\r\n  delete(menu:MenuInterface){\r\n    this.menuService.deleteMenu(menu)\r\n    .subscribe(\r\n      ()=>{\r\n        this.loadData();\r\n      }\r\n    )\r\n  }\r\n  byId(category1, category2){\r\n    return category1.id === category2.id;\r\n  }\r\n\r\n  getTableClass(){\r\n    if(this.isLoggedIn()===true){\r\n      return \"col-md-8\";\r\n    }\r\n    else{\r\n      return \"col-md-12\";\r\n    }\r\n  }\r\n\r\n  changePage(i:number){\r\n    this.currentPage+=i;\r\n    this.loadData();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/main/main.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/page-not-found/page-not-found.component.css\n// module id = ../../../../../src/app/page/page-not-found/page-not-found.component.css\n// module chunks = main","module.exports = \"<h1>\\r\\n  Wrong page buddy :)\\r\\n</h1>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/page-not-found/page-not-found.component.html\n// module id = ../../../../../src/app/page/page-not-found/page-not-found.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/page/page-not-found/page-not-found.component.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { JwtUtilsService } from './jwt-utils.service';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n  private readonly loginPath = '/api/login';\r\n\r\n  constructor(private http: HttpClient, private jwtUtilsService: JwtUtilsService) { }\r\n\r\n  login(username: string, password: string): Observable<boolean> {\r\n    var headers: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    return this.http.post(this.loginPath, JSON.stringify({ username, password }), { headers })\r\n      .map((res: any) => {\r\n        let token = res && res['token'];\r\n        if (token) {\r\n          localStorage.setItem('currentUser', JSON.stringify({\r\n            username: username,\r\n            roles: this.jwtUtilsService.getRoles(token),\r\n            token: token\r\n          }));\r\n          return true;\r\n        }\r\n        else {\r\n          return false;\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        if (error.status === 400) {\r\n          return Observable.throw('Ilegal login');\r\n        }\r\n        else {\r\n          return Observable.throw(error.json().error || 'Server error');\r\n        }\r\n      });\r\n  }\r\n\r\n  getToken(): String {\r\n    var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    var token = currentUser && currentUser.token;\r\n    return token ? token : \"\";\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('currentUser');\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    if (this.getToken() != '') return true;\r\n    else return false;\r\n  }\r\n\r\n  getCurrentUser() {\r\n    if (localStorage.currentUser) {\r\n      return JSON.parse(localStorage.currentUser);\r\n    }\r\n    else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/service/authentication-service.service.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthenticationService } from './authentication-service.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class CanActivateAuthGuard implements CanActivate {\r\n\r\n  constructor(private authenticationService: AuthenticationService, private router: Router) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.authenticationService.isLoggedIn()) {\r\n      return true;\r\n    }\r\n    else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/service/can-activate-auth.guard.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Category } from '../model/model';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n\r\n@Injectable()\r\nexport class CategoryService {\r\n\r\n  readonly path=\"/api/categories\";\r\n\r\n  constructor(private httpClient:HttpClient) { }\r\n\r\n  get():Observable<Category[]>{\r\n    return this.httpClient.get<Category[]>(`/api/categories`)\r\n    .catch((error:any)=>\r\n    Observable.throw(error.message || 'Server Error')\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/service/category.service.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class JwtUtilsService {\r\n\r\n  constructor() { }\r\n\r\n  getRoles(token: string) {\r\n    let jwtData = token.split('.')[1];\r\n    let decodedJwtJsonData = window.atob(jwtData);\r\n    let decodedJwtData = JSON.parse(decodedJwtJsonData);\r\n\r\n    return decodedJwtData.roles.map(x => x.authority) || [];\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/service/jwt-utils.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { MenuInterface, Page, Menu } from '../model/model';\nimport { Observable } from 'rxjs/Rx';\n\n\n@Injectable()\nexport class MenuService {\n\n  constructor(private http:HttpClient) { }\n\n  getMenues(page: number): Observable<Page<MenuInterface>> {\n  \tlet params = new HttpParams();\n  \tparams = params.append('page', page.toString());\n\n  \treturn this.http.get('api/menu', {params: params}) as \n  \t\tObservable<Page<MenuInterface>>;\n  }\n\n  getMenu(id:number): Observable<MenuInterface>{\n\treturn this.http.get<MenuInterface>(`api/menu/${id}`)\n    .catch((error:any)=>\n    Observable.throw(error.message || 'Server Error')\n    );\n  }\n\n  deleteMenu(menu: MenuInterface):Observable<MenuInterface> {\n    return this.http.delete(`api/menu/${menu.id}`, { responseType: 'text' }).\n      catch((error: any) =>\n        Observable.throw(error.message || 'Server error')\n      );\n  }\n\n\n  editMenu(menu): Observable<MenuInterface> {\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.put<MenuInterface>(`api/menu/${menu.id}`, JSON.stringify(menu), {headers})\n    .catch((error:any)=>\n    Observable.throw(error.message || 'Server Error')\n    );\n  }\n\n  addMenu(menu): Observable<MenuInterface> {\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.post<MenuInterface>('api/menu', JSON.stringify(menu), {headers})\n    .catch((error:any)=>\n    Observable.throw(error.message || 'Server Error')\n    );\n  }\n\n  filter(menuName:string): Observable<MenuInterface[]> {\n    let params \n    return this.http.get<MenuInterface[]>(`api/menu?menuName=${menuName}`)\n    .catch((error:any)=>\n    Observable.throw(error.message || 'Server Error')\n    );\n  }\n  \n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/service/menu.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\nimport { AuthenticationService } from './authentication-service.service';\r\nimport { HttpRequest } from '@angular/common/http';\r\nimport { HttpHandler } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HttpEvent } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http/src/headers';\r\nimport { Injector } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private inj: Injector) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let authenticationService:AuthenticationService = this.inj.get(AuthenticationService); \r\n    request = request.clone({\r\n      setHeaders: {\r\n        'X-Auth-Token': `${authenticationService.getToken()}`\r\n      }\r\n    });\r\n\r\n    return next.handle(request);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/app/service/token-interceptor.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// G:/Eclipse Workspace/DomaciPicerija/PicerijaClient/src/main.ts"],"sourceRoot":"webpack:///"}